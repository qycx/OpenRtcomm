using System;
using System.Collections.Generic;
using System.Text;

namespace qy
{

	//  2012/02/24
	public unsafe struct PLAY_AUDIO_procInfo
	{
		//MACRO_qyQThreadProcInfo_common
		public QY_Q2 q2;
		public bool bQInited;
		public ulong dwThreadId;
		public IntPtr hThread;
		public bool bQuit;
		public ulong dwTickCnt_start;
		public bool bRunning;
		//MY_DEBUG_STEP debugStep;


		//
		public uint uiTranNo;                                     //  2009/04/27

		//
		public QY_AUDIO_HEADER ah;                                             //  2010/06/17

		public AUDIO_PLAY_CFG playCfg;                                     //  2009/06/03

		//  2013/05/24
		public fixed char playbackDevDesc[48];                          //  ??????????

		//  2017/06/15
		public uint uiPlayType;
		public ulong dwLastTickCnt_startPlayer;

		//
		public struct             VOE_PLAY_webRtc                            {
					 void* pVoePlay;
		};
		public VOE_PLAY_webRtc webRtc;

		
		//		
		struct PLAY_AUDIO_procInfo_var		{
			uint uiSampleTimeInMs;                             //  2009/05/03
	uint dwTickCnt_uiSampleTimeInMs_internal;           //  2012/02/24. audioPlayer????
	uint dwTickCnt_uiSampleTimeInMs_syncAv;             //  2012/02/18. ?video???

	//
	uint dwTickCnt_uiSampleTimeInMs_syncRecv;           //  2012/02/24. ?newRecv????, ????????

	//
	uint uiSampleTimeInMs_newRecvd;                     //  2009/05/03
	uint dwTickCnt_uiSampleTimeInMs_newRecvd;

	//  
	int nTimes_noAudioData;

	bool bVideoReady;

	//  2012/02/19
	uint uiTimeInMs_audio_remains;                          //  ???????????
	ulong dwTickCnt_GetCurrentPosition;                     //  ??GetCurrentPosition???

	//  2015/07/29
	ulong dwTickCnt_beforePlay;


};
		PLAY_AUDIO_procInfo_var m_var;

//				
bool bNeedStop_webRtc_my_inStream;                      //  2018/06/16

//
int nTimes_noAudioData_webRtc;

//
struct PLAY_AUDIO_procInfo_cache
		{
					 //
uint uiBufSize;
char* pBuf;
//
char* pLeft;    //					=	NULL;									//  2009/04/27
uint nLeft; //						=	0;

//
ulong dwTickCnt_lastAudioData;

				 };
		PLAY_AUDIO_procInfo_cache cache;

//  2017/06/22				 
		struct PLAY_AUDIO_procInfo_lowLatency		{
					 int mql;
			int xql;
			//
			int last_mql;
			int last_xql;
			//
			int last_dangerousMql;
			ulong dwTickCnt_last_dangerousMql;

			//
			ulong dwTgt_start1;

			//
			bool bNeedAdjust;
			ulong dwTickCnt_last_adjust;

			//  2017/10/13
			struct PLAY_AUDIO_procInfo_ptsInfo
			{
						 uint uiPts_lastRecvd;
						uint nErr_ptsMissed;
			};
			PLAY_AUDIO_procInfo_ptsInfo ptsInfo;
			//
			struct PLAY_AUDIO_procInfo_avg_pkt
			{
						 int nBytes_ptks;
							int n_pkts;
						//
						int nAvg_pkt_inMs;
			};
			PLAY_AUDIO_procInfo_avg_pkt avg_pkt;
			//
			int xql_ok;
			int min_mql_ok;
			int max_mql_ok;

			
		};
		PLAY_AUDIO_procInfo_lowLatency	lowLatency;


}		 ;



//
//
public struct PARAM_fillD3d
	{
	ulong nIntervalInMs_fillData;
	bool bFailed_getTextureInfo_toFill;                 //  2014/11/25
														//bool										bFailed_devCtx_stillUsed;						//  2014/11/25
														//bool										bFailed_FinishCommandList;

}
;


//
//
public struct TMP_fps_info
	{
	int iCount;                                         //  帧数.2014/07/02.用d3d的get_fps( )来得到player的fps.然后计算帧间隔，限制各时间在realInterval - 3, realInterval + 3间。fps放在player里，在playList里显示出来	
	ulong curTimeInMs;
	ulong lastTimeInMs;
	float fps_real;
	//
	ulong avgTimePerFrameInMs;
	//
	ulong avgTimePerFrameInMs_real;                     //  2015/09/10

}
;

	public struct PLAY_VIDEO_procInfo_mql
	{
		ulong dwTgt_start1;
		int mql;
		int xql;

		//
		int last_mql;                                       //  last_min_qNodes_left;
		int last_xql;

		//
		int mql_ok;
		int mql_big_ok;
		int xql_ok;

		//
		bool bNeedReset;
	};

	struct PLAY_VIDEO_procInfo_calc
	{
		uint uiPts_start;
		ulong dwTgt_start;
	};

	struct PLAY_VIDEO_procInfo_lowLatency
	{

		PLAY_VIDEO_procInfo_mql mql;

		//
		bool bNoAudio;                                      //  2016/04/10
															//
		bool bAccurate;                                     //  2016/04/11

		//
		bool bNeedAdjust;                                   //  2015/09/13			
															//
		int nAheadInMs;
		int nAheadInMs_gt_mql;                              //  2015/03/02. greater than
		int nDelayInMs_lt_mql;                              //  less than

		//
		int nTimes_sleep;
		ulong dwToInMs_toPostDraw;                          //  2012/02/07
															//
		ulong dwToInMs_1740;

		//
		PLAY_VIDEO_procInfo_calc calc;


	};

	struct PLAY_VIDEO_procInfo_fillD3d
	{
		bool bNeedFill;                                        //  2014/11/25
															   //
		PARAM_fillD3d param0, param1;
		//
		bool bFilled_d3dData;                               //  2013/08/08
	};

	struct PLAY_VIDEO_procInfo_status
	{
		ulong dwLastTgt_postToDraw;                            //  2012/01/26
		int nInterval_real_postToDraw;
		//
		int iSampleTimeInMs_last;
		uint uiPts_last;                                        //  2015/02/19

		//
		//int									last_nQNodes_postToDraw;						//  2015/09/16

		//
		bool bNoMsgAndWait;                                 //  2012/03/01
		int nTimes_wait;                                    //  2015/09/11
															//
		PLAY_VIDEO_procInfo_fillD3d fillD3d;
		//							
		byte ucSkipped_for_d3dData;                            //  2013/09/09

		//  2015/02/25
		TMP_fps_info fpsInfo;                                       //  2015/09/10

		//
	};


	public unsafe struct PLAY_VIDEO_procInfo_var
	{
		uint uiSampleTimeInMs;                             //  2009/05/03
		uint dwTgt_uiSampleTimeInMs_internal;
		//
		uint dwTickCnt_uiSampleTimeInMs_syncRecv;

		uint uiSampleTimeInMs_newRecvd;                     //  2009/05/03
		uint dwTickCnt_uiSampleTimeInMs_newRecvd;

		//  2015/09/30
		ushort usPktResType;                                    //  2015/09/30. 

		//
		//  2015/02/20
		//
		IntPtr hWnd_display;                                  //  2009/07/25
		bool ucbDisplayAllFrames;                          //  2009/07/25

		//
		fixed char tWhere[64];                                       //  2015/09/13

		//
		PLAY_VIDEO_procInfo_lowLatency lowLatency;


		//
		PLAY_VIDEO_procInfo_status status;

	};

	//
	//
	public unsafe struct PLAY_VIDEO_procInfo
	{                                               //  2009/05/02
	//MACRO_qyQThreadProcInfo_common
		public QY_Q2           q2;
		public bool bQInited;
		public ulong dwThreadId;
		public IntPtr hThread;
		public bool bQuit;
		public ulong dwTickCnt_start;
		public bool bRunning;
		//MY_DEBUG_STEP debugStep;


		//
		public uint uiTranNo;                                     //  2009/04/27

		//
		public QY_VIDEO_HEADER vh;
		public ushort usFps;                                           //  2015/02/20. 这个来自于传输过来的策略。

		//
		public uint uiPlayType;
		public ulong dwLastTickCnt_startPlayer;

		//
		public PLAY_VIDEO_procInfo_var m_var;

		public QY_Q2 displayQ2;                                        //  2009/07/25
		public bool ucbDisplayQInited;					

}		 ;



//


public struct QY_PLAYER
{                                               //  2009/05/02
	public QY_MESSENGER_ID idInfo_recorder;                                //  

		public uint uiSampleTimeInMs_start;                            //  2009/05/27

		public PLAY_AUDIO_procInfo audio;
		public PLAY_VIDEO_procInfo video;

		public int iTaskId;                                        //  2009/09/17

		//
		public uint uiTranNo_player;                               //  2016/02/18


		//  2014/12/10
		public ulong dwLastTickCnt_doApplyForPlayer;                       //  2014/12/10

}
;



    
}
